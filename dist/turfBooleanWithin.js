!function(e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).turfBooleanWithin=e()}(function(){return function n(o,i,a){function u(r,e){if(!i[r]){if(!o[r]){var t="function"==typeof require&&require;if(!e&&t)return t(r,!0);if(s)return s(r,!0);throw(e=new Error("Cannot find module '"+r+"'")).code="MODULE_NOT_FOUND",e}t=i[r]={exports:{}},o[r][0].call(t.exports,function(e){return u(o[r][1][e]||e)},t,t.exports,n,o,i,a)}return i[r].exports}for(var s="function"==typeof require&&require,e=0;e<a.length;e++)u(a[e]);return u}({1:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=e("@turf/meta");function o(e){var r=[1/0,1/0,-1/0,-1/0];return n.coordEach(e,function(e){r[0]>e[0]&&(r[0]=e[0]),r[1]>e[1]&&(r[1]=e[1]),r[2]<e[0]&&(r[2]=e[0]),r[3]<e[1]&&(r[3]=e[1])}),r}t.default=o.default=o},{"@turf/meta":6}],2:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var f=e("@turf/invariant");function c(e,r,t){for(var n=!1,o=0,i=(r=r[0][0]===r[r.length-1][0]&&r[0][1]===r[r.length-1][1]?r.slice(0,r.length-1):r).length-1;o<r.length;i=o++){var a=r[o][0],u=r[o][1],s=r[i][0],l=r[i][1];if(e[1]*(a-s)+u*(s-e[0])+l*(e[0]-a)==0&&(a-e[0])*(s-e[0])<=0&&(u-e[1])*(l-e[1])<=0)return!t;u>e[1]!=l>e[1]&&e[0]<(s-a)*(e[1]-u)/(l-u)+a&&(n=!n)}return n}t.default=function(e,r,t){if(void 0===t&&(t={}),!e)throw new Error("point is required");if(!r)throw new Error("polygon is required");var n=f.getCoord(e),o=(e=f.getGeom(r)).type,r=r.bbox,i=e.coordinates;if(r&&!1==(e=n,(r=r)[0]<=e[0]&&r[1]<=e[1]&&r[2]>=e[0]&&r[3]>=e[1]))return!1;"Polygon"===o&&(i=[i]);for(var a=!1,u=0;u<i.length&&!a;u++)if(c(n,i[u][0],t.ignoreBoundary)){for(var s=!1,l=1;l<i[u].length&&!s;)c(n,i[u][l],!t.ignoreBoundary)&&(s=!0),l++;s||(a=!0)}return a}},{"@turf/invariant":5}],3:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=e("@turf/invariant");t.default=function(e,r,t){void 0===t&&(t={});for(var n=u.getCoord(e),o=u.getCoords(r),i=0;i<o.length-1;i++){var a=!1;if(t.ignoreEndVertices&&(0===i&&(a="start"),i===o.length-2&&(a="end"),0===i)&&i+1===o.length-1&&(a="both"),function(e,r,t,n,o){var i=t[0],a=t[1],u=e[0],e=e[1],s=r[0],r=r[1],l=t[0]-u,t=t[1]-e,f=s-u,c=r-e,l=l*c-t*f;if(null!==o){if(Math.abs(l)>o)return}else if(0!=l)return;{if(!n)return Math.abs(f)>=Math.abs(c)?0<f?u<=i&&i<=s:s<=i&&i<=u:0<c?e<=a&&a<=r:r<=a&&a<=e;if("start"===n)return Math.abs(f)>=Math.abs(c)?0<f?u<i&&i<=s:s<=i&&i<u:0<c?e<a&&a<=r:r<=a&&a<e;if("end"===n)return Math.abs(f)>=Math.abs(c)?0<f?u<=i&&i<s:s<i&&i<=u:0<c?e<=a&&a<r:r<a&&a<=e;if("both"===n)return Math.abs(f)>=Math.abs(c)?0<f?u<i&&i<s:s<i&&i<u:0<c?e<a&&a<r:r<a&&a<e}return}(o[i],o[i+1],n,a,void 0===t.epsilon?null:t.epsilon))return!0}return!1}},{"@turf/invariant":5}],4:[function(e,r,n){"use strict";function u(e,r,t){var n={type:"Feature"};return 0!==(t=void 0===t?{}:t).id&&!t.id||(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function o(e,r,t){if(void 0===t&&(t={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(h(e[0])&&h(e[1]))return u({type:"Point",coordinates:e},r,t);throw new Error("coordinates must contain numbers")}function i(e,r,t){void 0===t&&(t={});for(var n=0,o=e;n<o.length;n++){var i=o[n];if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<i[i.length-1].length;a++)if(i[i.length-1][a]!==i[0][a])throw new Error("First and last Position are not equivalent.")}return u({type:"Polygon",coordinates:e},r,t)}function a(e,r,t){if(void 0===t&&(t={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return u({type:"LineString",coordinates:e},r,t)}function s(e,r){var t={type:"FeatureCollection"};return(r=void 0===r?{}:r).id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function l(e,r,t){return u({type:"MultiLineString",coordinates:e},r,t=void 0===t?{}:t)}function f(e,r,t){return u({type:"MultiPoint",coordinates:e},r,t=void 0===t?{}:t)}function c(e,r,t){return u({type:"MultiPolygon",coordinates:e},r,t=void 0===t?{}:t)}function d(e,r){var t=n.factors[r=void 0===r?"kilometers":r];if(t)return e*t;throw new Error(r+" units is invalid")}function g(e,r){var t=n.factors[r=void 0===r?"kilometers":r];if(t)return e/t;throw new Error(r+" units is invalid")}function t(e){return 180*(e%(2*Math.PI))/Math.PI}function h(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.earthRadius=6371008.8,n.factors={centimeters:100*n.earthRadius,centimetres:100*n.earthRadius,degrees:n.earthRadius/111325,feet:3.28084*n.earthRadius,inches:39.37*n.earthRadius,kilometers:n.earthRadius/1e3,kilometres:n.earthRadius/1e3,meters:n.earthRadius,metres:n.earthRadius,miles:n.earthRadius/1609.344,millimeters:1e3*n.earthRadius,millimetres:1e3*n.earthRadius,nauticalmiles:n.earthRadius/1852,radians:1,yards:1.0936*n.earthRadius},n.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/n.earthRadius,yards:1.0936133},n.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},n.feature=u,n.geometry=function(e,r,t){switch(void 0===t&&(t={}),e){case"Point":return o(r).geometry;case"LineString":return a(r).geometry;case"Polygon":return i(r).geometry;case"MultiPoint":return f(r).geometry;case"MultiLineString":return l(r).geometry;case"MultiPolygon":return c(r).geometry;default:throw new Error(e+" is invalid")}},n.point=o,n.points=function(e,r,t){return void 0===t&&(t={}),s(e.map(function(e){return o(e,r)}),t)},n.polygon=i,n.polygons=function(e,r,t){return void 0===t&&(t={}),s(e.map(function(e){return i(e,r)}),t)},n.lineString=a,n.lineStrings=function(e,r,t){return void 0===t&&(t={}),s(e.map(function(e){return a(e,r)}),t)},n.featureCollection=s,n.multiLineString=l,n.multiPoint=f,n.multiPolygon=c,n.geometryCollection=function(e,r,t){return u({type:"GeometryCollection",geometries:e},r,t=void 0===t?{}:t)},n.round=function(e,r){if(!(r=void 0===r?0:r)||0<=r)return r=Math.pow(10,r||0),Math.round(e*r)/r;throw new Error("precision must be a positive number")},n.radiansToLength=d,n.lengthToRadians=g,n.lengthToDegrees=function(e,r){return t(g(e,r))},n.bearingToAzimuth=function(e){return(e%=360)<0&&(e+=360),e},n.radiansToDegrees=t,n.degreesToRadians=function(e){return e%360*Math.PI/180},n.convertLength=function(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),0<=e)return d(g(e,r),t);throw new Error("length must be a positive number")},n.convertArea=function(e,r,t){if(void 0===r&&(r="meters"),void 0===t&&(t="kilometers"),!(0<=e))throw new Error("area must be a positive number");if(!(r=n.areaFactors[r]))throw new Error("invalid original units");if(t=n.areaFactors[t])return e/r*t;throw new Error("invalid final units")},n.isNumber=h,n.isObject=function(e){return!!e&&e.constructor===Object},n.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(function(e){if(!h(e))throw new Error("bbox must only contain numbers")})},n.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},{}],5:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=e("@turf/helpers");t.getCoord=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&2<=e.length&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")},t.getCoords=function(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},t.containsNumber=function e(r){if(1<r.length&&n.isNumber(r[0])&&n.isNumber(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return e(r[0]);throw new Error("coordinates must only contain numbers")},t.geojsonType=function(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)},t.featureOf=function(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)},t.collectionOf=function(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var n=0,o=e.features;n<o.length;n++){var i=o[n];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!i.geometry||i.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+i.geometry.type)}},t.getGeom=function(e){return"Feature"===e.type?e.geometry:e},t.getType=function(e,r){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":("Feature"===e.type&&null!==e.geometry?e.geometry:e).type}},{"@turf/helpers":4}],6:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var h=e("@turf/helpers");function E(e,r,t){if(null!==e)for(var n,o,i,a=0,u=e.type,s="FeatureCollection"===u,l="Feature"===u,f=s?e.features.length:1,c=0;c<f;c++)for(var d,g,h=(g=!!(d=s?e.features[c].geometry:l?e.geometry:e)&&"GeometryCollection"===d.type)?d.geometries.length:1,y=0;y<h;y++){var m=0,p=0,v=g?d.geometries[y]:d;if(null!==v){var w=v.coordinates,b=v.type,P=!t||"Polygon"!==b&&"MultiPolygon"!==b?0:1;switch(b){case null:break;case"Point":if(!1===r(w,a,c,m,p))return!1;a++,m++;break;case"LineString":case"MultiPoint":for(n=0;n<w.length;n++){if(!1===r(w[n],a,c,m,p))return!1;a++,"MultiPoint"===b&&m++}"LineString"===b&&m++;break;case"Polygon":case"MultiLineString":for(n=0;n<w.length;n++){for(o=0;o<w[n].length-P;o++){if(!1===r(w[n][o],a,c,m,p))return!1;a++}"MultiLineString"===b&&m++,"Polygon"===b&&p++}"Polygon"===b&&m++;break;case"MultiPolygon":for(n=0;n<w.length;n++){for(o=p=0;o<w[n].length;o++){for(i=0;i<w[n][o].length-P;i++){if(!1===r(w[n][o][i],a,c,m,p))return!1;a++}p++}m++}break;case"GeometryCollection":for(n=0;n<v.geometries.length;n++)if(!1===E(v.geometries[n],r,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}function i(e,r){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length&&!1!==r(e.features[t].properties,t);t++);break;case"Feature":r(e.properties,0)}}function a(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length&&!1!==r(e.features[t],t);t++);}function n(e,r){for(var t,n,o,i,a,u,s,l,f,c=0,d="FeatureCollection"===e.type,g="Feature"===e.type,h=d?e.features.length:1,y=0;y<h;y++){for(a=d?e.features[y].geometry:g?e.geometry:e,s=d?e.features[y].properties:g?e.properties:{},l=d?e.features[y].bbox:g?e.bbox:void 0,f=d?e.features[y].id:g?e.id:void 0,i=(u=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,n=0;n<i;n++)if(null===(o=u?a.geometries[n]:a)){if(!1===r(null,c,s,l,f))return!1}else switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===r(o,c,s,l,f))return!1;break;case"GeometryCollection":for(t=0;t<o.geometries.length;t++)if(!1===r(o.geometries[t],c,s,l,f))return!1;break;default:throw new Error("Unknown Geometry Type")}c++}}function u(e,l){n(e,function(e,r,t,n,o){var i,a=null===e?null:e.type;switch(a){case null:case"Point":case"LineString":case"Polygon":return!1===l(h.feature(e,t,{bbox:n,id:o}),r,0)?!1:void 0}switch(a){case"MultiPoint":i="Point";break;case"MultiLineString":i="LineString";break;case"MultiPolygon":i="Polygon"}for(var u=0;u<e.coordinates.length;u++){var s=e.coordinates[u];if(!1===l(h.feature({type:i,coordinates:s},t),r,u))return!1}})}function o(e,g){u(e,function(i,a,u){var s=0;if(i.geometry){var l,f,c,d,e=i.geometry.type;if("Point"!==e&&"MultiPoint"!==e)return d=c=f=0,!1!==E(i,function(e,r,t,n,o){if(void 0===l||f<a||c<n||d<o)l=e,f=a,c=n,d=o,s=0;else{n=h.lineString([l,e],i.properties);if(!1===g(n,a,u,o,s))return!1;s++,l=e}})&&void 0}})}function s(e,a){if(!e)throw new Error("geojson is required");u(e,function(e,r,t){if(null!==e.geometry){var n=e.geometry.type,o=e.geometry.coordinates;switch(n){case"LineString":if(!1===a(e,r,t,0,0))return!1;break;case"Polygon":for(var i=0;i<o.length;i++)if(!1===a(h.lineString(o[i],e.properties),r,t,i))return!1}}})}t.coordAll=function(e){var r=[];return E(e,function(e){r.push(e)}),r},t.coordEach=E,t.coordReduce=function(e,i,a,r){var u=a;return E(e,function(e,r,t,n,o){u=0===r&&void 0===a?e:i(u,e,r,t,n,o)},r),u},t.featureEach=a,t.featureReduce=function(e,t,n){var o=n;return a(e,function(e,r){o=0===r&&void 0===n?e:t(o,e,r)}),o},t.findPoint=function(e,r){if(!h.isObject(r=r||{}))throw new Error("options is invalid");var t,n=r.featureIndex||0,o=r.multiFeatureIndex||0,i=r.geometryIndex||0,a=r.coordIndex||0,u=r.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),u=u||e.features[n].properties,t=e.features[n].geometry;break;case"Feature":u=u||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var s=t.coordinates;switch(t.type){case"Point":return h.point(s,u,r);case"MultiPoint":return o<0&&(o=s.length+o),h.point(s[o],u,r);case"LineString":return a<0&&(a=s.length+a),h.point(s[a],u,r);case"Polygon":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a),h.point(s[i][a],u,r);case"MultiLineString":return o<0&&(o=s.length+o),a<0&&(a=s[o].length+a),h.point(s[o][a],u,r);case"MultiPolygon":return o<0&&(o=s.length+o),i<0&&(i=s[o].length+i),a<0&&(a=s[o][i].length-a),h.point(s[o][i][a],u,r)}throw new Error("geojson is invalid")},t.findSegment=function(e,r){if(!h.isObject(r=r||{}))throw new Error("options is invalid");var t,n=r.featureIndex||0,o=r.multiFeatureIndex||0,i=r.geometryIndex||0,a=r.segmentIndex||0,u=r.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),u=u||e.features[n].properties,t=e.features[n].geometry;break;case"Feature":u=u||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var s=t.coordinates;switch(t.type){case"Point":case"MultiPoint":return null;case"LineString":return a<0&&(a=s.length+a-1),h.lineString([s[a],s[a+1]],u,r);case"Polygon":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a-1),h.lineString([s[i][a],s[i][a+1]],u,r);case"MultiLineString":return o<0&&(o=s.length+o),a<0&&(a=s[o].length+a-1),h.lineString([s[o][a],s[o][a+1]],u,r);case"MultiPolygon":return o<0&&(o=s.length+o),i<0&&(i=s[o].length+i),a<0&&(a=s[o][i].length-a-1),h.lineString([s[o][i][a],s[o][i][a+1]],u,r)}throw new Error("geojson is invalid")},t.flattenEach=u,t.flattenReduce=function(e,n,o){var i=o;return u(e,function(e,r,t){i=0===r&&0===t&&void 0===o?e:n(i,e,r,t)}),i},t.geomEach=n,t.geomReduce=function(e,i,a){var u=a;return n(e,function(e,r,t,n,o){u=0===r&&void 0===a?e:i(u,e,r,t,n,o)}),u},t.lineEach=s,t.lineReduce=function(e,o,i){var a=i;return s(e,function(e,r,t,n){a=0===r&&void 0===i?e:o(a,e,r,t,n)}),a},t.propEach=i,t.propReduce=function(e,t,n){var o=n;return i(e,function(e,r){o=0===r&&void 0===n?e:t(o,e,r)}),o},t.segmentEach=o,t.segmentReduce=function(e,i,a){var u=a,s=!1;return o(e,function(e,r,t,n,o){u=!1===s&&void 0===a?e:i(u,e,r,t,n,o),s=!0}),u}},{"@turf/helpers":4}],"@turf/boolean-within":[function(e,r,t){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},N=(Object.defineProperty(t,"__esModule",{value:!0}),n(e("@turf/bbox"))),T=n(e("@turf/boolean-point-on-line")),B=n(e("@turf/boolean-point-in-polygon")),D=e("@turf/invariant");function U(e,r){return!(e[0]>r[0]||e[2]<r[2]||e[1]>r[1]||e[3]<r[3])}function V(e,r){return e[0]===r[0]&&e[1]===r[1]}t.default=function(e,r){var t=D.getGeom(e),n=D.getGeom(r),o=t.type,i=n.type;switch(o){case"Point":switch(i){case"MultiPoint":var a,u=t,s=n,l=!1;for(a=0;a<s.coordinates.length;a++)if(V(s.coordinates[a],u.coordinates)){l=!0;break}return l;case"LineString":return T.default(t,n,{ignoreEndVertices:!0});case"Polygon":case"MultiPolygon":return B.default(t,n,{ignoreBoundary:!0});default:throw new Error("feature2 "+i+" geometry not supported")}case"MultiPoint":switch(i){case"MultiPoint":for(var f=t,c=n,d=0;d<f.coordinates.length;d++){for(var g=!1,h=0;h<c.coordinates.length;h++)V(f.coordinates[d],c.coordinates[h])&&(g=!0);if(!g)return!1}return!0;case"LineString":for(var y=t,m=n,p=!1,v=0;v<y.coordinates.length;v++){if(!T.default(y.coordinates[v],m))return!1;p=p||T.default(y.coordinates[v],m,{ignoreEndVertices:!0})}return p;case"Polygon":case"MultiPolygon":for(var w=t,b=n,P=!0,E=!1,M=0;M<w.coordinates.length;M++){if(!(E=B.default(w.coordinates[1],b))){P=!1;break}E=B.default(w.coordinates[1],b,{ignoreBoundary:!0})}return P&&E;default:throw new Error("feature2 "+i+" geometry not supported")}case"LineString":switch(i){case"LineString":for(var S=t,F=n,k=0;k<S.coordinates.length;k++)if(!T.default(S.coordinates[k],F))return!1;return!0;case"Polygon":case"MultiPolygon":var x=t,L=n,C=N.default(L),I=N.default(x);if(!U(C,I))return!1;for(var A,R=!1,O=0;O<x.coordinates.length-1;O++){if(!B.default(x.coordinates[O],L))return!1;(R=R||B.default(x.coordinates[O],L,{ignoreBoundary:!0}))||(A=function(e,r){return[(e[0]+r[0])/2,(e[1]+r[1])/2]}(x.coordinates[O],x.coordinates[O+1]),R=B.default(A,L,{ignoreBoundary:!0}))}return R;default:throw new Error("feature2 "+i+" geometry not supported")}case"Polygon":switch(i){case"Polygon":case"MultiPolygon":var _=t,j=n,G=N.default(_);if(!U(N.default(j),G))return!1;for(var q=0;q<_.coordinates[0].length;q++)if(!B.default(_.coordinates[0][q],j))return!1;return!0;default:throw new Error("feature2 "+i+" geometry not supported")}default:throw new Error("feature1 "+o+" geometry not supported")}}},{"@turf/bbox":1,"@turf/boolean-point-in-polygon":2,"@turf/boolean-point-on-line":3,"@turf/invariant":5}]},{},[])("@turf/boolean-within")});

// @turf/boolean-within 6.5.0
var turfBooleanWithin = module.exports;
