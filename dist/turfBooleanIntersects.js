!function(e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).turfBooleanIntersects=e()}(function(){return function n(o,i,a){function u(t,e){if(!i[t]){if(!o[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(s)return s(t,!0);throw(e=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",e}r=i[t]={exports:{}},o[t][0].call(r.exports,function(e){return u(o[t][1][e]||e)},r,r.exports,n,o,i,a)}return i[t].exports}for(var s="function"==typeof require&&require,e=0;e<a.length;e++)u(a[e]);return u}({1:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/meta");function o(e){var t=[1/0,1/0,-1/0,-1/0];return n.coordEach(e,function(e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])}),t}r.default=o.default=o},{"@turf/meta":8}],2:[function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},s=(Object.defineProperty(r,"__esModule",{value:!0}),n(e("@turf/boolean-point-in-polygon"))),l=n(e("@turf/line-intersect")),o=e("@turf/meta"),f=n(e("@turf/polygon-to-line"));function i(e,t){for(var r=0;r<e.coordinates.length-1;r++)if(function(e,t,r){var n=r[0]-e[0],o=r[1]-e[1],i=t[0]-e[0],a=t[1]-e[1];if(n*a-o*i!=0)return;return Math.abs(i)>=Math.abs(a)?0<i?e[0]<=r[0]&&r[0]<=t[0]:t[0]<=r[0]&&r[0]<=e[0]:0<a?e[1]<=r[1]&&r[1]<=t[1]:t[1]<=r[1]&&r[1]<=e[1]}(e.coordinates[r],e.coordinates[r+1],t.coordinates))return 1}function a(e,t){for(var r=0,n=t.coordinates;r<n.length;r++){var o=n[r];if(s.default(o,e))return 1}return 0<l.default(t,f.default(e)).features.length}r.default=function(e,r){var n=!0;return o.flattenEach(e,function(t){o.flattenEach(r,function(e){if(!1===n)return!1;n=function(e,t){switch(e.type){case"Point":switch(t.type){case"Point":return!function(e,t){return e[0]===t[0]&&e[1]===t[1]}(e.coordinates,t.coordinates);case"LineString":return!i(t,e);case"Polygon":return!s.default(e,t)}break;case"LineString":switch(t.type){case"Point":return!i(e,t);case"LineString":return!function(e,t){if(0<l.default(e,t).features.length)return 1;return}(e,t);case"Polygon":return!a(t,e)}break;case"Polygon":switch(t.type){case"Point":return!s.default(t,e);case"LineString":return!a(e,t);case"Polygon":return!function(e,t){for(var r=0,n=e.coordinates[0];r<n.length;r++){var o=n[r];if(s.default(o,t))return 1}for(var i=0,a=t.coordinates[0];i<a.length;i++){var u=a[i];if(s.default(u,e))return 1}if(0<l.default(f.default(e),f.default(t)).features.length)return 1;return}(t,e)}}return!1}(t.geometry,e.geometry)})}),n}},{"@turf/boolean-point-in-polygon":3,"@turf/line-intersect":6,"@turf/meta":8,"@turf/polygon-to-line":9}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var f=e("@turf/invariant");function c(e,t,r){for(var n=!1,o=0,i=(t=t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]?t.slice(0,t.length-1):t).length-1;o<t.length;i=o++){var a=t[o][0],u=t[o][1],s=t[i][0],l=t[i][1];if(e[1]*(a-s)+u*(s-e[0])+l*(e[0]-a)==0&&(a-e[0])*(s-e[0])<=0&&(u-e[1])*(l-e[1])<=0)return!r;u>e[1]!=l>e[1]&&e[0]<(s-a)*(e[1]-u)/(l-u)+a&&(n=!n)}return n}r.default=function(e,t,r){if(void 0===r&&(r={}),!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");var n=f.getCoord(e),o=(e=f.getGeom(t)).type,t=t.bbox,i=e.coordinates;if(t&&!1==(e=n,(t=t)[0]<=e[0]&&t[1]<=e[1]&&t[2]>=e[0]&&t[3]>=e[1]))return!1;"Polygon"===o&&(i=[i]);for(var a=!1,u=0;u<i.length&&!a;u++)if(c(n,i[u][0],r.ignoreBoundary)){for(var s=!1,l=1;l<i[u].length&&!s;)c(n,i[u][l],!r.ignoreBoundary)&&(s=!0),l++;s||(a=!0)}return a}},{"@turf/invariant":5}],4:[function(e,t,n){"use strict";function u(e,t,r){var n={type:"Feature"};return 0!==(r=void 0===r?{}:r).id&&!r.id||(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=t||{},n.geometry=e,n}function o(e,t,r){if(void 0===r&&(r={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(p(e[0])&&p(e[1]))return u({type:"Point",coordinates:e},t,r);throw new Error("coordinates must contain numbers")}function i(e,t,r){void 0===r&&(r={});for(var n=0,o=e;n<o.length;n++){var i=o[n];if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<i[i.length-1].length;a++)if(i[i.length-1][a]!==i[0][a])throw new Error("First and last Position are not equivalent.")}return u({type:"Polygon",coordinates:e},t,r)}function a(e,t,r){if(void 0===r&&(r={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return u({type:"LineString",coordinates:e},t,r)}function s(e,t){var r={type:"FeatureCollection"};return(t=void 0===t?{}:t).id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function l(e,t,r){return u({type:"MultiLineString",coordinates:e},t,r=void 0===r?{}:r)}function f(e,t,r){return u({type:"MultiPoint",coordinates:e},t,r=void 0===r?{}:r)}function c(e,t,r){return u({type:"MultiPolygon",coordinates:e},t,r=void 0===r?{}:r)}function h(e,t){var r=n.factors[t=void 0===t?"kilometers":t];if(r)return e*r;throw new Error(t+" units is invalid")}function d(e,t){var r=n.factors[t=void 0===t?"kilometers":t];if(r)return e/r;throw new Error(t+" units is invalid")}function r(e){return 180*(e%(2*Math.PI))/Math.PI}function p(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.earthRadius=6371008.8,n.factors={centimeters:100*n.earthRadius,centimetres:100*n.earthRadius,degrees:n.earthRadius/111325,feet:3.28084*n.earthRadius,inches:39.37*n.earthRadius,kilometers:n.earthRadius/1e3,kilometres:n.earthRadius/1e3,meters:n.earthRadius,metres:n.earthRadius,miles:n.earthRadius/1609.344,millimeters:1e3*n.earthRadius,millimetres:1e3*n.earthRadius,nauticalmiles:n.earthRadius/1852,radians:1,yards:1.0936*n.earthRadius},n.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/n.earthRadius,yards:1.0936133},n.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},n.feature=u,n.geometry=function(e,t,r){switch(void 0===r&&(r={}),e){case"Point":return o(t).geometry;case"LineString":return a(t).geometry;case"Polygon":return i(t).geometry;case"MultiPoint":return f(t).geometry;case"MultiLineString":return l(t).geometry;case"MultiPolygon":return c(t).geometry;default:throw new Error(e+" is invalid")}},n.point=o,n.points=function(e,t,r){return void 0===r&&(r={}),s(e.map(function(e){return o(e,t)}),r)},n.polygon=i,n.polygons=function(e,t,r){return void 0===r&&(r={}),s(e.map(function(e){return i(e,t)}),r)},n.lineString=a,n.lineStrings=function(e,t,r){return void 0===r&&(r={}),s(e.map(function(e){return a(e,t)}),r)},n.featureCollection=s,n.multiLineString=l,n.multiPoint=f,n.multiPolygon=c,n.geometryCollection=function(e,t,r){return u({type:"GeometryCollection",geometries:e},t,r=void 0===r?{}:r)},n.round=function(e,t){if(!(t=void 0===t?0:t)||0<=t)return t=Math.pow(10,t||0),Math.round(e*t)/t;throw new Error("precision must be a positive number")},n.radiansToLength=h,n.lengthToRadians=d,n.lengthToDegrees=function(e,t){return r(d(e,t))},n.bearingToAzimuth=function(e){return(e%=360)<0&&(e+=360),e},n.radiansToDegrees=r,n.degreesToRadians=function(e){return e%360*Math.PI/180},n.convertLength=function(e,t,r){if(void 0===t&&(t="kilometers"),void 0===r&&(r="kilometers"),0<=e)return h(d(e,t),r);throw new Error("length must be a positive number")},n.convertArea=function(e,t,r){if(void 0===t&&(t="meters"),void 0===r&&(r="kilometers"),!(0<=e))throw new Error("area must be a positive number");if(!(t=n.areaFactors[t]))throw new Error("invalid original units");if(r=n.areaFactors[r])return e/t*r;throw new Error("invalid final units")},n.isNumber=p,n.isObject=function(e){return!!e&&e.constructor===Object},n.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(function(e){if(!p(e))throw new Error("bbox must only contain numbers")})},n.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},{}],5:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=e("@turf/helpers");r.getCoord=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&2<=e.length&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")},r.getCoords=function(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},r.containsNumber=function e(t){if(1<t.length&&n.isNumber(t[0])&&n.isNumber(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")},r.geojsonType=function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)},r.featureOf=function(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)},r.collectionOf=function(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(var n=0,o=e.features;n<o.length;n++){var i=o[n];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!i.geometry||i.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+i.geometry.type)}},r.getGeom=function(e){return"Feature"===e.type?e.geometry:e},r.getType=function(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":("Feature"===e.type&&null!==e.geometry?e.geometry:e).type}},{"@turf/helpers":4}],6:[function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},l=(Object.defineProperty(r,"__esModule",{value:!0}),e("@turf/helpers")),f=e("@turf/invariant"),a=n(e("@turf/line-segment")),u=e("@turf/meta"),s=n(e("geojson-rbush"));function c(e,t){e=f.getCoords(e),t=f.getCoords(t);if(2!==e.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==t.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var r=e[0][0],n=e[0][1],o=e[1][0],e=e[1][1],i=t[0][0],a=t[0][1],u=t[1][0],t=t[1][1],s=(t-a)*(o-r)-(u-i)*(e-n),u=(u-i)*(n-a)-(t-a)*(r-i),t=(o-r)*(n-a)-(e-n)*(r-i);return 0!=s&&(a=t/s,0<=(i=u/s))&&i<=1&&0<=a&&a<=1?l.point([r+i*(o-r),n+i*(e-n)]):null}r.default=function(e,t){var r,n,o={},i=[];return"LineString"===e.type&&(e=l.feature(e)),"LineString"===t.type&&(t=l.feature(t)),"Feature"===e.type&&"Feature"===t.type&&null!==e.geometry&&null!==t.geometry&&"LineString"===e.geometry.type&&"LineString"===t.geometry.type&&2===e.geometry.coordinates.length&&2===t.geometry.coordinates.length?(r=c(e,t))&&i.push(r):((n=s.default()).load(a.default(t)),u.featureEach(a.default(e),function(r){u.featureEach(n.search(r),function(e){var t,e=c(r,e);e&&(t=f.getCoords(e).join(","),o[t]||(o[t]=!0,i.push(e)))})})),l.featureCollection(i)}},{"@turf/helpers":4,"@turf/invariant":5,"@turf/line-segment":7,"@turf/meta":8,"geojson-rbush":10}],7:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var s=e("@turf/helpers"),a=e("@turf/invariant"),n=e("@turf/meta");r.default=function(e){var i;if(e)return i=[],n.flattenEach(e,function(e){var t=e,r=i,n=[],o=t.geometry;if(null!==o){switch(o.type){case"Polygon":n=a.getCoords(o);break;case"LineString":n=[a.getCoords(o)]}n.forEach(function(e){var a,u;a=t.properties,u=[],e.reduce(function(e,t){var r,n,o,i=s.lineString([e,t],a);return i.bbox=(r=t,n=(e=e)[0],e=e[1],o=r[0],r=r[1],[n<o?n:o,e<r?e:r,o<n?n:o,r<e?e:r]),u.push(i),t}),u.forEach(function(e){e.id=r.length,r.push(e)})})}}),s.featureCollection(i);throw new Error("geojson is required")}},{"@turf/helpers":4,"@turf/invariant":5,"@turf/meta":8}],8:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var p=e("@turf/helpers");function M(e,t,r){if(null!==e)for(var n,o,i,a=0,u=e.type,s="FeatureCollection"===u,l="Feature"===u,f=s?e.features.length:1,c=0;c<f;c++)for(var h,d,p=(d=!!(h=s?e.features[c].geometry:l?e.geometry:e)&&"GeometryCollection"===h.type)?h.geometries.length:1,g=0;g<p;g++){var m=0,y=0,v=d?h.geometries[g]:h;if(null!==v){var w=v.coordinates,b=v.type,x=!r||"Polygon"!==b&&"MultiPolygon"!==b?0:1;switch(b){case null:break;case"Point":if(!1===t(w,a,c,m,y))return!1;a++,m++;break;case"LineString":case"MultiPoint":for(n=0;n<w.length;n++){if(!1===t(w[n],a,c,m,y))return!1;a++,"MultiPoint"===b&&m++}"LineString"===b&&m++;break;case"Polygon":case"MultiLineString":for(n=0;n<w.length;n++){for(o=0;o<w[n].length-x;o++){if(!1===t(w[n][o],a,c,m,y))return!1;a++}"MultiLineString"===b&&m++,"Polygon"===b&&y++}"Polygon"===b&&m++;break;case"MultiPolygon":for(n=0;n<w.length;n++){for(o=y=0;o<w[n].length;o++){for(i=0;i<w[n][o].length-x;i++){if(!1===t(w[n][o][i],a,c,m,y))return!1;a++}y++}m++}break;case"GeometryCollection":for(n=0;n<v.geometries.length;n++)if(!1===M(v.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}function i(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function a(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function n(e,t){for(var r,n,o,i,a,u,s,l,f,c=0,h="FeatureCollection"===e.type,d="Feature"===e.type,p=h?e.features.length:1,g=0;g<p;g++){for(a=h?e.features[g].geometry:d?e.geometry:e,s=h?e.features[g].properties:d?e.properties:{},l=h?e.features[g].bbox:d?e.bbox:void 0,f=h?e.features[g].id:d?e.id:void 0,i=(u=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,n=0;n<i;n++)if(null===(o=u?a.geometries[n]:a)){if(!1===t(null,c,s,l,f))return!1}else switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(o,c,s,l,f))return!1;break;case"GeometryCollection":for(r=0;r<o.geometries.length;r++)if(!1===t(o.geometries[r],c,s,l,f))return!1;break;default:throw new Error("Unknown Geometry Type")}c++}}function u(e,l){n(e,function(e,t,r,n,o){var i,a=null===e?null:e.type;switch(a){case null:case"Point":case"LineString":case"Polygon":return!1===l(p.feature(e,r,{bbox:n,id:o}),t,0)?!1:void 0}switch(a){case"MultiPoint":i="Point";break;case"MultiLineString":i="LineString";break;case"MultiPolygon":i="Polygon"}for(var u=0;u<e.coordinates.length;u++){var s=e.coordinates[u];if(!1===l(p.feature({type:i,coordinates:s},r),t,u))return!1}})}function o(e,d){u(e,function(i,a,u){var s=0;if(i.geometry){var l,f,c,h,e=i.geometry.type;if("Point"!==e&&"MultiPoint"!==e)return h=c=f=0,!1!==M(i,function(e,t,r,n,o){if(void 0===l||f<a||c<n||h<o)l=e,f=a,c=n,h=o,s=0;else{n=p.lineString([l,e],i.properties);if(!1===d(n,a,u,o,s))return!1;s++,l=e}})&&void 0}})}function s(e,a){if(!e)throw new Error("geojson is required");u(e,function(e,t,r){if(null!==e.geometry){var n=e.geometry.type,o=e.geometry.coordinates;switch(n){case"LineString":if(!1===a(e,t,r,0,0))return!1;break;case"Polygon":for(var i=0;i<o.length;i++)if(!1===a(p.lineString(o[i],e.properties),t,r,i))return!1}}})}r.coordAll=function(e){var t=[];return M(e,function(e){t.push(e)}),t},r.coordEach=M,r.coordReduce=function(e,i,a,t){var u=a;return M(e,function(e,t,r,n,o){u=0===t&&void 0===a?e:i(u,e,t,r,n,o)},t),u},r.featureEach=a,r.featureReduce=function(e,r,n){var o=n;return a(e,function(e,t){o=0===t&&void 0===n?e:r(o,e,t)}),o},r.findPoint=function(e,t){if(!p.isObject(t=t||{}))throw new Error("options is invalid");var r,n=t.featureIndex||0,o=t.multiFeatureIndex||0,i=t.geometryIndex||0,a=t.coordIndex||0,u=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),u=u||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":u=u||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var s=r.coordinates;switch(r.type){case"Point":return p.point(s,u,t);case"MultiPoint":return o<0&&(o=s.length+o),p.point(s[o],u,t);case"LineString":return a<0&&(a=s.length+a),p.point(s[a],u,t);case"Polygon":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a),p.point(s[i][a],u,t);case"MultiLineString":return o<0&&(o=s.length+o),a<0&&(a=s[o].length+a),p.point(s[o][a],u,t);case"MultiPolygon":return o<0&&(o=s.length+o),i<0&&(i=s[o].length+i),a<0&&(a=s[o][i].length-a),p.point(s[o][i][a],u,t)}throw new Error("geojson is invalid")},r.findSegment=function(e,t){if(!p.isObject(t=t||{}))throw new Error("options is invalid");var r,n=t.featureIndex||0,o=t.multiFeatureIndex||0,i=t.geometryIndex||0,a=t.segmentIndex||0,u=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),u=u||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":u=u||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var s=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return a<0&&(a=s.length+a-1),p.lineString([s[a],s[a+1]],u,t);case"Polygon":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a-1),p.lineString([s[i][a],s[i][a+1]],u,t);case"MultiLineString":return o<0&&(o=s.length+o),a<0&&(a=s[o].length+a-1),p.lineString([s[o][a],s[o][a+1]],u,t);case"MultiPolygon":return o<0&&(o=s.length+o),i<0&&(i=s[o].length+i),a<0&&(a=s[o][i].length-a-1),p.lineString([s[o][i][a],s[o][i][a+1]],u,t)}throw new Error("geojson is invalid")},r.flattenEach=u,r.flattenReduce=function(e,n,o){var i=o;return u(e,function(e,t,r){i=0===t&&0===r&&void 0===o?e:n(i,e,t,r)}),i},r.geomEach=n,r.geomReduce=function(e,i,a){var u=a;return n(e,function(e,t,r,n,o){u=0===t&&void 0===a?e:i(u,e,t,r,n,o)}),u},r.lineEach=s,r.lineReduce=function(e,o,i){var a=i;return s(e,function(e,t,r,n){a=0===t&&void 0===i?e:o(a,e,t,r,n)}),a},r.propEach=i,r.propReduce=function(e,r,n){var o=n;return i(e,function(e,t){o=0===t&&void 0===n?e:r(o,e,t)}),o},r.segmentEach=o,r.segmentReduce=function(e,i,a){var u=a,s=!1;return o(e,function(e,t,r,n,o){u=!1===s&&void 0===a?e:i(u,e,t,r,n,o),s=!0}),u}},{"@turf/helpers":4}],9:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var i=e("@turf/helpers"),a=e("@turf/invariant");function n(e,t){return void 0===t&&(t={}),u(a.getGeom(e).coordinates,t.properties||("Feature"===e.type?e.properties:{}))}function o(e,t){void 0===t&&(t={});var r=a.getGeom(e).coordinates,n=t.properties||("Feature"===e.type?e.properties:{}),o=[];return r.forEach(function(e){o.push(u(e,n))}),i.featureCollection(o)}function u(e,t){return 1<e.length?i.multiLineString(e,t):i.lineString(e[0],t)}r.default=function(e,t){void 0===t&&(t={});var r=a.getGeom(e);switch(t.properties||"Feature"!==e.type||(t.properties=e.properties),r.type){case"Polygon":return n(r,t);case"MultiPolygon":return o(r,t);default:throw new Error("invalid poly")}},r.polygonToLine=n,r.multiPolygonToLine=o,r.coordsToLine=u},{"@turf/helpers":4,"@turf/invariant":5}],10:[function(e,t,r){var n=e("rbush"),o=e("@turf/helpers"),i=e("@turf/meta"),a=e("@turf/bbox").default,u=i.featureEach,s=(i.coordEach,o.polygon,o.featureCollection);function l(e){e=new n(e);return e.insert=function(e){if("Feature"!==e.type)throw new Error("invalid feature");return e.bbox=e.bbox||a(e),n.prototype.insert.call(this,e)},e.load=function(e){var t=[];return Array.isArray(e)?e.forEach(function(e){if("Feature"!==e.type)throw new Error("invalid features");e.bbox=e.bbox||a(e),t.push(e)}):u(e,function(e){if("Feature"!==e.type)throw new Error("invalid features");e.bbox=e.bbox||a(e),t.push(e)}),n.prototype.load.call(this,t)},e.remove=function(e,t){if("Feature"!==e.type)throw new Error("invalid feature");return e.bbox=e.bbox||a(e),n.prototype.remove.call(this,e,t)},e.clear=function(){return n.prototype.clear.call(this)},e.search=function(e){e=n.prototype.search.call(this,this.toBBox(e));return s(e)},e.collides=function(e){return n.prototype.collides.call(this,this.toBBox(e))},e.all=function(){var e=n.prototype.all.call(this);return s(e)},e.toJSON=function(){return n.prototype.toJSON.call(this)},e.fromJSON=function(e){return n.prototype.fromJSON.call(this,e)},e.toBBox=function(e){var t;if(e.bbox)t=e.bbox;else if(Array.isArray(e)&&4===e.length)t=e;else if(Array.isArray(e)&&6===e.length)t=[e[0],e[1],e[3],e[4]];else{if("Feature"!==e.type&&"FeatureCollection"!==e.type)throw new Error("invalid geojson");t=a(e)}return{minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]}},e}t.exports=l,t.exports.default=l},{"@turf/bbox":1,"@turf/helpers":4,"@turf/meta":8,rbush:11}],11:[function(e,t,r){var n,o;n=this,o=function(){"use strict";function d(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function s(e,t){return e<t?-1:t<e?1:0}function e(e){void 0===e&&(e=9),this._maxEntries=Math.max(4,e),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}function p(e,t){g(e,0,e.children.length,t,e)}function g(e,t,r,n,o){(o=o||v(null)).minX=1/0,o.minY=1/0,o.maxX=-1/0,o.maxY=-1/0;for(var i=t;i<r;i++){var a=e.children[i];h(o,e.leaf?n(a):a)}return o}function h(e,t){return e.minX=Math.min(e.minX,t.minX),e.minY=Math.min(e.minY,t.minY),e.maxX=Math.max(e.maxX,t.maxX),e.maxY=Math.max(e.maxY,t.maxY),e}function i(e,t){return e.minX-t.minX}function a(e,t){return e.minY-t.minY}function m(e){return(e.maxX-e.minX)*(e.maxY-e.minY)}function y(e){return e.maxX-e.minX+(e.maxY-e.minY)}function f(e,t){return e.minX<=t.minX&&e.minY<=t.minY&&t.maxX<=e.maxX&&t.maxY<=e.maxY}function l(e,t){return t.minX<=e.maxX&&t.minY<=e.maxY&&t.maxX>=e.minX&&t.maxY>=e.minY}function v(e){return{children:e,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function w(e,t,r,n,o){for(var i,a,u=[t,r];u.length;)(r=u.pop())-(t=u.pop())<=n||(i=t+Math.ceil((r-t)/n/2)*n,function e(t,r,n,o,i){for(;n<o;){600<o-n&&(a=o-n+1,u=r-n+1,l=Math.log(a),s=.5*Math.exp(2*l/3),l=.5*Math.sqrt(l*s*(a-s)/a)*(u-a/2<0?-1:1),e(t,r,Math.max(n,Math.floor(r-u*s/a+l)),Math.min(o,Math.floor(r+(a-u)*s/a+l)),i));var a,u,s,l,f=t[r],c=n,h=o;for(d(t,n,r),0<i(t[o],f)&&d(t,n,o);c<h;){for(d(t,c,h),c++,h--;i(t[c],f)<0;)c++;for(;0<i(t[h],f);)h--}0===i(t[n],f)?d(t,n,h):d(t,++h,o),h<=r&&(n=h+1),r<=h&&(o=h-1)}}(a=e,i,t||0,r||a.length-1,o||s),u.push(t,i,i,r))}return e.prototype.all=function(){return this._all(this.data,[])},e.prototype.search=function(e){var t=this.data,r=[];if(l(e,t))for(var n=this.toBBox,o=[];t;){for(var i=0;i<t.children.length;i++){var a=t.children[i],u=t.leaf?n(a):a;l(e,u)&&(t.leaf?r.push(a):f(e,u)?this._all(a,r):o.push(a))}t=o.pop()}return r},e.prototype.collides=function(e){var t=this.data;if(l(e,t))for(var r=[];t;){for(var n=0;n<t.children.length;n++){var o=t.children[n],i=t.leaf?this.toBBox(o):o;if(l(e,i)){if(t.leaf||f(e,i))return!0;r.push(o)}}t=r.pop()}return!1},e.prototype.load=function(e){if(e&&e.length)if(e.length<this._minEntries)for(var t=0;t<e.length;t++)this.insert(e[t]);else{var r,n=this._build(e.slice(),0,e.length-1,0);this.data.children.length?this.data.height===n.height?this._splitRoot(this.data,n):(this.data.height<n.height&&(r=this.data,this.data=n,n=r),this._insert(n,this.data.height-n.height-1,!0)):this.data=n}return this},e.prototype.insert=function(e){return e&&this._insert(e,this.data.height-1),this},e.prototype.clear=function(){return this.data=v([]),this},e.prototype.remove=function(e,t){if(e)for(var r,n,o,i=this.data,a=this.toBBox(e),u=[],s=[];i||u.length;){if(i||(i=u.pop(),n=u[u.length-1],r=s.pop(),o=!0),i.leaf){var l=function(e,t,r){if(!r)return t.indexOf(e);for(var n=0;n<t.length;n++)if(r(e,t[n]))return n;return-1}(e,i.children,t);if(-1!==l)return i.children.splice(l,1),u.push(i),this._condense(u),this}o||i.leaf||!f(i,a)?n?(r++,i=n.children[r],o=!1):i=null:(u.push(i),s.push(r),i=(n=i).children[r=0])}return this},e.prototype.toBBox=function(e){return e},e.prototype.compareMinX=function(e,t){return e.minX-t.minX},e.prototype.compareMinY=function(e,t){return e.minY-t.minY},e.prototype.toJSON=function(){return this.data},e.prototype.fromJSON=function(e){return this.data=e,this},e.prototype._all=function(e,t){for(var r=[];e;)e.leaf?t.push.apply(t,e.children):r.push.apply(r,e.children),e=r.pop();return t},e.prototype._build=function(e,t,r,n){var o,i=r-t+1,a=this._maxEntries;if(i<=a)p(o=v(e.slice(t,r+1)),this.toBBox);else{n||(n=Math.ceil(Math.log(i)/Math.log(a)),a=Math.ceil(i/Math.pow(a,n-1))),(o=v([])).leaf=!1,o.height=n;var u=Math.ceil(i/a),s=u*Math.ceil(Math.sqrt(a));w(e,t,r,s,this.compareMinX);for(var l=t;l<=r;l+=s){var f=Math.min(l+s-1,r);w(e,l,f,u,this.compareMinY);for(var c=l;c<=f;c+=u){var h=Math.min(c+u-1,f);o.children.push(this._build(e,c,h,n-1))}}p(o,this.toBBox)}return o},e.prototype._chooseSubtree=function(e,t,r,n){for(;n.push(t),!t.leaf&&n.length-1!==r;){for(var o=1/0,i=1/0,a=void 0,u=0;u<t.children.length;u++){var s=t.children[u],l=m(s),f=(c=e,f=s,(Math.max(f.maxX,c.maxX)-Math.min(f.minX,c.minX))*(Math.max(f.maxY,c.maxY)-Math.min(f.minY,c.minY))-l);f<i?(i=f,o=l<o?l:o,a=s):f===i&&l<o&&(o=l,a=s)}t=a||t.children[0]}var c,f;return t},e.prototype._insert=function(e,t,r){var r=r?e:this.toBBox(e),n=[],o=this._chooseSubtree(r,this.data,t,n);for(o.children.push(e),h(o,r);0<=t&&n[t].children.length>this._maxEntries;)this._split(n,t),t--;this._adjustParentBBoxes(r,n,t)},e.prototype._split=function(e,t){var r=e[t],n=r.children.length,o=this._minEntries,o=(this._chooseSplitAxis(r,o,n),this._chooseSplitIndex(r,o,n)),n=v(r.children.splice(o,r.children.length-o));n.height=r.height,n.leaf=r.leaf,p(r,this.toBBox),p(n,this.toBBox),t?e[t-1].children.push(n):this._splitRoot(r,n)},e.prototype._splitRoot=function(e,t){this.data=v([e,t]),this.data.height=e.height+1,this.data.leaf=!1,p(this.data,this.toBBox)},e.prototype._chooseSplitIndex=function(e,t,r){for(var n,o,i,a,u=1/0,s=1/0,l=t;l<=r-t;l++){var f=g(e,0,l,this.toBBox),c=g(e,l,r,this.toBBox),h=(a=f,h=c,0,o=Math.max(a.minX,h.minX),i=Math.max(a.minY,h.minY),d=Math.min(a.maxX,h.maxX),a=Math.min(a.maxY,h.maxY),Math.max(0,d-o)*Math.max(0,a-i)),d=m(f)+m(c);h<u?(u=h,n=l,s=d<s?d:s):h===u&&d<s&&(s=d,n=l)}return n||r-t},e.prototype._chooseSplitAxis=function(e,t,r){var n=e.leaf?this.compareMinX:i,o=e.leaf?this.compareMinY:a;this._allDistMargin(e,t,r,n)<this._allDistMargin(e,t,r,o)&&e.children.sort(n)},e.prototype._allDistMargin=function(e,t,r,n){e.children.sort(n);for(var o=this.toBBox,i=g(e,0,t,o),a=g(e,r-t,r,o),u=y(i)+y(a),s=t;s<r-t;s++){var l=e.children[s];h(i,e.leaf?o(l):l),u+=y(i)}for(var f=r-t-1;t<=f;f--){var c=e.children[f];h(a,e.leaf?o(c):c),u+=y(a)}return u},e.prototype._adjustParentBBoxes=function(e,t,r){for(var n=r;0<=n;n--)h(t[n],e)},e.prototype._condense=function(e){for(var t=e.length-1,r=void 0;0<=t;t--)0===e[t].children.length?0<t?(r=e[t-1].children).splice(r.indexOf(e[t]),1):this.clear():p(e[t],this.toBBox)},e},"object"==typeof r&&void 0!==t?t.exports=o():(n=n||self).RBush=o()},{}],"@turf/boolean-intersects":[function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},o=(Object.defineProperty(r,"__esModule",{value:!0}),n(e("@turf/boolean-disjoint"))),i=e("@turf/meta");r.default=function(e,r){var n=!1;return i.flattenEach(e,function(t){i.flattenEach(r,function(e){if(!0===n)return!0;n=!o.default(t.geometry,e.geometry)})}),n}},{"@turf/boolean-disjoint":2,"@turf/meta":8}]},{},[])("@turf/boolean-intersects")});

// @turf/boolean-intersects 6.5.0
var turfBooleanIntersects = module.exports;
