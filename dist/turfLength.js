!function(e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).turfLength=e()}(function(){return function n(o,i,u){function a(r,e){if(!i[r]){if(!o[r]){var t="function"==typeof require&&require;if(!e&&t)return t(r,!0);if(s)return s(r,!0);throw(e=new Error("Cannot find module '"+r+"'")).code="MODULE_NOT_FOUND",e}t=i[r]={exports:{}},o[r][0].call(t.exports,function(e){return a(o[r][1][e]||e)},t,t.exports,n,o,i,u)}return i[r].exports}for(var s="function"==typeof require&&require,e=0;e<u.length;e++)a(u[e]);return a}({1:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=e("@turf/invariant"),u=e("@turf/helpers");t.default=function(e,r,t){void 0===t&&(t={});var e=i.getCoord(e),r=i.getCoord(r),n=u.degreesToRadians(r[1]-e[1]),o=u.degreesToRadians(r[0]-e[0]),e=u.degreesToRadians(e[1]),r=u.degreesToRadians(r[1]),n=Math.pow(Math.sin(n/2),2)+Math.pow(Math.sin(o/2),2)*Math.cos(e)*Math.cos(r);return u.radiansToLength(2*Math.atan2(Math.sqrt(n),Math.sqrt(1-n)),t.units)}},{"@turf/helpers":2,"@turf/invariant":3}],2:[function(e,r,n){"use strict";function a(e,r,t){var n={type:"Feature"};return 0!==(t=void 0===t?{}:t).id&&!t.id||(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function o(e,r,t){if(void 0===t&&(t={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(y(e[0])&&y(e[1]))return a({type:"Point",coordinates:e},r,t);throw new Error("coordinates must contain numbers")}function i(e,r,t){void 0===t&&(t={});for(var n=0,o=e;n<o.length;n++){var i=o[n];if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<i[i.length-1].length;u++)if(i[i.length-1][u]!==i[0][u])throw new Error("First and last Position are not equivalent.")}return a({type:"Polygon",coordinates:e},r,t)}function u(e,r,t){if(void 0===t&&(t={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return a({type:"LineString",coordinates:e},r,t)}function s(e,r){var t={type:"FeatureCollection"};return(r=void 0===r?{}:r).id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function l(e,r,t){return a({type:"MultiLineString",coordinates:e},r,t=void 0===t?{}:t)}function c(e,r,t){return a({type:"MultiPoint",coordinates:e},r,t=void 0===t?{}:t)}function f(e,r,t){return a({type:"MultiPolygon",coordinates:e},r,t=void 0===t?{}:t)}function d(e,r){var t=n.factors[r=void 0===r?"kilometers":r];if(t)return e*t;throw new Error(r+" units is invalid")}function g(e,r){var t=n.factors[r=void 0===r?"kilometers":r];if(t)return e/t;throw new Error(r+" units is invalid")}function t(e){return 180*(e%(2*Math.PI))/Math.PI}function y(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.earthRadius=6371008.8,n.factors={centimeters:100*n.earthRadius,centimetres:100*n.earthRadius,degrees:n.earthRadius/111325,feet:3.28084*n.earthRadius,inches:39.37*n.earthRadius,kilometers:n.earthRadius/1e3,kilometres:n.earthRadius/1e3,meters:n.earthRadius,metres:n.earthRadius,miles:n.earthRadius/1609.344,millimeters:1e3*n.earthRadius,millimetres:1e3*n.earthRadius,nauticalmiles:n.earthRadius/1852,radians:1,yards:1.0936*n.earthRadius},n.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/n.earthRadius,yards:1.0936133},n.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},n.feature=a,n.geometry=function(e,r,t){switch(void 0===t&&(t={}),e){case"Point":return o(r).geometry;case"LineString":return u(r).geometry;case"Polygon":return i(r).geometry;case"MultiPoint":return c(r).geometry;case"MultiLineString":return l(r).geometry;case"MultiPolygon":return f(r).geometry;default:throw new Error(e+" is invalid")}},n.point=o,n.points=function(e,r,t){return void 0===t&&(t={}),s(e.map(function(e){return o(e,r)}),t)},n.polygon=i,n.polygons=function(e,r,t){return void 0===t&&(t={}),s(e.map(function(e){return i(e,r)}),t)},n.lineString=u,n.lineStrings=function(e,r,t){return void 0===t&&(t={}),s(e.map(function(e){return u(e,r)}),t)},n.featureCollection=s,n.multiLineString=l,n.multiPoint=c,n.multiPolygon=f,n.geometryCollection=function(e,r,t){return a({type:"GeometryCollection",geometries:e},r,t=void 0===t?{}:t)},n.round=function(e,r){if(!(r=void 0===r?0:r)||0<=r)return r=Math.pow(10,r||0),Math.round(e*r)/r;throw new Error("precision must be a positive number")},n.radiansToLength=d,n.lengthToRadians=g,n.lengthToDegrees=function(e,r){return t(g(e,r))},n.bearingToAzimuth=function(e){return(e%=360)<0&&(e+=360),e},n.radiansToDegrees=t,n.degreesToRadians=function(e){return e%360*Math.PI/180},n.convertLength=function(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),0<=e)return d(g(e,r),t);throw new Error("length must be a positive number")},n.convertArea=function(e,r,t){if(void 0===r&&(r="meters"),void 0===t&&(t="kilometers"),!(0<=e))throw new Error("area must be a positive number");if(!(r=n.areaFactors[r]))throw new Error("invalid original units");if(t=n.areaFactors[t])return e/r*t;throw new Error("invalid final units")},n.isNumber=y,n.isObject=function(e){return!!e&&e.constructor===Object},n.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(function(e){if(!y(e))throw new Error("bbox must only contain numbers")})},n.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},{}],3:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=e("@turf/helpers");t.getCoord=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&2<=e.length&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")},t.getCoords=function(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},t.containsNumber=function e(r){if(1<r.length&&n.isNumber(r[0])&&n.isNumber(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return e(r[0]);throw new Error("coordinates must only contain numbers")},t.geojsonType=function(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)},t.featureOf=function(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)},t.collectionOf=function(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var n=0,o=e.features;n<o.length;n++){var i=o[n];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!i.geometry||i.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+i.geometry.type)}},t.getGeom=function(e){return"Feature"===e.type?e.geometry:e},t.getType=function(e,r){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":("Feature"===e.type&&null!==e.geometry?e.geometry:e).type}},{"@turf/helpers":2}],4:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var y=e("@turf/helpers");function E(e,r,t){if(null!==e)for(var n,o,i,u=0,a=e.type,s="FeatureCollection"===a,l="Feature"===a,c=s?e.features.length:1,f=0;f<c;f++)for(var d,g,y=(g=!!(d=s?e.features[f].geometry:l?e.geometry:e)&&"GeometryCollection"===d.type)?d.geometries.length:1,h=0;h<y;h++){var m=0,p=0,w=g?d.geometries[h]:d;if(null!==w){var v=w.coordinates,b=w.type,P=!t||"Polygon"!==b&&"MultiPolygon"!==b?0:1;switch(b){case null:break;case"Point":if(!1===r(v,u,f,m,p))return!1;u++,m++;break;case"LineString":case"MultiPoint":for(n=0;n<v.length;n++){if(!1===r(v[n],u,f,m,p))return!1;u++,"MultiPoint"===b&&m++}"LineString"===b&&m++;break;case"Polygon":case"MultiLineString":for(n=0;n<v.length;n++){for(o=0;o<v[n].length-P;o++){if(!1===r(v[n][o],u,f,m,p))return!1;u++}"MultiLineString"===b&&m++,"Polygon"===b&&p++}"Polygon"===b&&m++;break;case"MultiPolygon":for(n=0;n<v.length;n++){for(o=p=0;o<v[n].length;o++){for(i=0;i<v[n][o].length-P;i++){if(!1===r(v[n][o][i],u,f,m,p))return!1;u++}p++}m++}break;case"GeometryCollection":for(n=0;n<w.geometries.length;n++)if(!1===E(w.geometries[n],r,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}function i(e,r){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length&&!1!==r(e.features[t].properties,t);t++);break;case"Feature":r(e.properties,0)}}function u(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length&&!1!==r(e.features[t],t);t++);}function n(e,r){for(var t,n,o,i,u,a,s,l,c,f=0,d="FeatureCollection"===e.type,g="Feature"===e.type,y=d?e.features.length:1,h=0;h<y;h++){for(u=d?e.features[h].geometry:g?e.geometry:e,s=d?e.features[h].properties:g?e.properties:{},l=d?e.features[h].bbox:g?e.bbox:void 0,c=d?e.features[h].id:g?e.id:void 0,i=(a=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,n=0;n<i;n++)if(null===(o=a?u.geometries[n]:u)){if(!1===r(null,f,s,l,c))return!1}else switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===r(o,f,s,l,c))return!1;break;case"GeometryCollection":for(t=0;t<o.geometries.length;t++)if(!1===r(o.geometries[t],f,s,l,c))return!1;break;default:throw new Error("Unknown Geometry Type")}f++}}function a(e,l){n(e,function(e,r,t,n,o){var i,u=null===e?null:e.type;switch(u){case null:case"Point":case"LineString":case"Polygon":return!1===l(y.feature(e,t,{bbox:n,id:o}),r,0)?!1:void 0}switch(u){case"MultiPoint":i="Point";break;case"MultiLineString":i="LineString";break;case"MultiPolygon":i="Polygon"}for(var a=0;a<e.coordinates.length;a++){var s=e.coordinates[a];if(!1===l(y.feature({type:i,coordinates:s},t),r,a))return!1}})}function o(e,g){a(e,function(i,u,a){var s=0;if(i.geometry){var l,c,f,d,e=i.geometry.type;if("Point"!==e&&"MultiPoint"!==e)return d=f=c=0,!1!==E(i,function(e,r,t,n,o){if(void 0===l||c<u||f<n||d<o)l=e,c=u,f=n,d=o,s=0;else{n=y.lineString([l,e],i.properties);if(!1===g(n,u,a,o,s))return!1;s++,l=e}})&&void 0}})}function s(e,u){if(!e)throw new Error("geojson is required");a(e,function(e,r,t){if(null!==e.geometry){var n=e.geometry.type,o=e.geometry.coordinates;switch(n){case"LineString":if(!1===u(e,r,t,0,0))return!1;break;case"Polygon":for(var i=0;i<o.length;i++)if(!1===u(y.lineString(o[i],e.properties),r,t,i))return!1}}})}t.coordAll=function(e){var r=[];return E(e,function(e){r.push(e)}),r},t.coordEach=E,t.coordReduce=function(e,i,u,r){var a=u;return E(e,function(e,r,t,n,o){a=0===r&&void 0===u?e:i(a,e,r,t,n,o)},r),a},t.featureEach=u,t.featureReduce=function(e,t,n){var o=n;return u(e,function(e,r){o=0===r&&void 0===n?e:t(o,e,r)}),o},t.findPoint=function(e,r){if(!y.isObject(r=r||{}))throw new Error("options is invalid");var t,n=r.featureIndex||0,o=r.multiFeatureIndex||0,i=r.geometryIndex||0,u=r.coordIndex||0,a=r.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),a=a||e.features[n].properties,t=e.features[n].geometry;break;case"Feature":a=a||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var s=t.coordinates;switch(t.type){case"Point":return y.point(s,a,r);case"MultiPoint":return o<0&&(o=s.length+o),y.point(s[o],a,r);case"LineString":return u<0&&(u=s.length+u),y.point(s[u],a,r);case"Polygon":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u),y.point(s[i][u],a,r);case"MultiLineString":return o<0&&(o=s.length+o),u<0&&(u=s[o].length+u),y.point(s[o][u],a,r);case"MultiPolygon":return o<0&&(o=s.length+o),i<0&&(i=s[o].length+i),u<0&&(u=s[o][i].length-u),y.point(s[o][i][u],a,r)}throw new Error("geojson is invalid")},t.findSegment=function(e,r){if(!y.isObject(r=r||{}))throw new Error("options is invalid");var t,n=r.featureIndex||0,o=r.multiFeatureIndex||0,i=r.geometryIndex||0,u=r.segmentIndex||0,a=r.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),a=a||e.features[n].properties,t=e.features[n].geometry;break;case"Feature":a=a||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var s=t.coordinates;switch(t.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=s.length+u-1),y.lineString([s[u],s[u+1]],a,r);case"Polygon":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u-1),y.lineString([s[i][u],s[i][u+1]],a,r);case"MultiLineString":return o<0&&(o=s.length+o),u<0&&(u=s[o].length+u-1),y.lineString([s[o][u],s[o][u+1]],a,r);case"MultiPolygon":return o<0&&(o=s.length+o),i<0&&(i=s[o].length+i),u<0&&(u=s[o][i].length-u-1),y.lineString([s[o][i][u],s[o][i][u+1]],a,r)}throw new Error("geojson is invalid")},t.flattenEach=a,t.flattenReduce=function(e,n,o){var i=o;return a(e,function(e,r,t){i=0===r&&0===t&&void 0===o?e:n(i,e,r,t)}),i},t.geomEach=n,t.geomReduce=function(e,i,u){var a=u;return n(e,function(e,r,t,n,o){a=0===r&&void 0===u?e:i(a,e,r,t,n,o)}),a},t.lineEach=s,t.lineReduce=function(e,o,i){var u=i;return s(e,function(e,r,t,n){u=0===r&&void 0===i?e:o(u,e,r,t,n)}),u},t.propEach=i,t.propReduce=function(e,t,n){var o=n;return i(e,function(e,r){o=0===r&&void 0===n?e:t(o,e,r)}),o},t.segmentEach=o,t.segmentReduce=function(e,i,u){var a=u,s=!1;return o(e,function(e,r,t,n,o){a=!1===s&&void 0===u?e:i(a,e,r,t,n,o),s=!0}),a}},{"@turf/helpers":2}],"@turf/length":[function(e,r,t){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},o=(Object.defineProperty(t,"__esModule",{value:!0}),n(e("@turf/distance"))),i=e("@turf/meta");t.default=function(e,t){return void 0===t&&(t={}),i.segmentReduce(e,function(e,r){r=r.geometry.coordinates;return e+o.default(r[0],r[1],t)},0)}},{"@turf/distance":1,"@turf/meta":4}]},{},[])("@turf/length")});

// @turf/length 6.5.0
var turfLength = module.exports;
