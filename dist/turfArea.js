!function(e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).turfArea=e()}(function(){return function n(i,o,u){function a(r,e){if(!o[r]){if(!i[r]){var t="function"==typeof require&&require;if(!e&&t)return t(r,!0);if(s)return s(r,!0);throw(e=new Error("Cannot find module '"+r+"'")).code="MODULE_NOT_FOUND",e}t=o[r]={exports:{}},i[r][0].call(t.exports,function(e){return a(i[r][1][e]||e)},t,t.exports,n,i,o,u)}return o[r].exports}for(var s="function"==typeof require&&require,e=0;e<u.length;e++)a(u[e]);return a}({1:[function(e,r,n){"use strict";function a(e,r,t){var n={type:"Feature"};return 0!==(t=void 0===t?{}:t).id&&!t.id||(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function i(e,r,t){if(void 0===t&&(t={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(h(e[0])&&h(e[1]))return a({type:"Point",coordinates:e},r,t);throw new Error("coordinates must contain numbers")}function o(e,r,t){void 0===t&&(t={});for(var n=0,i=e;n<i.length;n++){var o=i[n];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<o[o.length-1].length;u++)if(o[o.length-1][u]!==o[0][u])throw new Error("First and last Position are not equivalent.")}return a({type:"Polygon",coordinates:e},r,t)}function u(e,r,t){if(void 0===t&&(t={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return a({type:"LineString",coordinates:e},r,t)}function s(e,r){var t={type:"FeatureCollection"};return(r=void 0===r?{}:r).id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function l(e,r,t){return a({type:"MultiLineString",coordinates:e},r,t=void 0===t?{}:t)}function c(e,r,t){return a({type:"MultiPoint",coordinates:e},r,t=void 0===t?{}:t)}function f(e,r,t){return a({type:"MultiPolygon",coordinates:e},r,t=void 0===t?{}:t)}function g(e,r){var t=n.factors[r=void 0===r?"kilometers":r];if(t)return e*t;throw new Error(r+" units is invalid")}function d(e,r){var t=n.factors[r=void 0===r?"kilometers":r];if(t)return e/t;throw new Error(r+" units is invalid")}function t(e){return 180*(e%(2*Math.PI))/Math.PI}function h(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.earthRadius=6371008.8,n.factors={centimeters:100*n.earthRadius,centimetres:100*n.earthRadius,degrees:n.earthRadius/111325,feet:3.28084*n.earthRadius,inches:39.37*n.earthRadius,kilometers:n.earthRadius/1e3,kilometres:n.earthRadius/1e3,meters:n.earthRadius,metres:n.earthRadius,miles:n.earthRadius/1609.344,millimeters:1e3*n.earthRadius,millimetres:1e3*n.earthRadius,nauticalmiles:n.earthRadius/1852,radians:1,yards:1.0936*n.earthRadius},n.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/n.earthRadius,yards:1.0936133},n.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},n.feature=a,n.geometry=function(e,r,t){switch(void 0===t&&(t={}),e){case"Point":return i(r).geometry;case"LineString":return u(r).geometry;case"Polygon":return o(r).geometry;case"MultiPoint":return c(r).geometry;case"MultiLineString":return l(r).geometry;case"MultiPolygon":return f(r).geometry;default:throw new Error(e+" is invalid")}},n.point=i,n.points=function(e,r,t){return void 0===t&&(t={}),s(e.map(function(e){return i(e,r)}),t)},n.polygon=o,n.polygons=function(e,r,t){return void 0===t&&(t={}),s(e.map(function(e){return o(e,r)}),t)},n.lineString=u,n.lineStrings=function(e,r,t){return void 0===t&&(t={}),s(e.map(function(e){return u(e,r)}),t)},n.featureCollection=s,n.multiLineString=l,n.multiPoint=c,n.multiPolygon=f,n.geometryCollection=function(e,r,t){return a({type:"GeometryCollection",geometries:e},r,t=void 0===t?{}:t)},n.round=function(e,r){if(!(r=void 0===r?0:r)||0<=r)return r=Math.pow(10,r||0),Math.round(e*r)/r;throw new Error("precision must be a positive number")},n.radiansToLength=g,n.lengthToRadians=d,n.lengthToDegrees=function(e,r){return t(d(e,r))},n.bearingToAzimuth=function(e){return(e%=360)<0&&(e+=360),e},n.radiansToDegrees=t,n.degreesToRadians=function(e){return e%360*Math.PI/180},n.convertLength=function(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),0<=e)return g(d(e,r),t);throw new Error("length must be a positive number")},n.convertArea=function(e,r,t){if(void 0===r&&(r="meters"),void 0===t&&(t="kilometers"),!(0<=e))throw new Error("area must be a positive number");if(!(r=n.areaFactors[r]))throw new Error("invalid original units");if(t=n.areaFactors[t])return e/r*t;throw new Error("invalid final units")},n.isNumber=h,n.isObject=function(e){return!!e&&e.constructor===Object},n.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(function(e){if(!h(e))throw new Error("bbox must only contain numbers")})},n.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},{}],2:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var h=e("@turf/helpers");function M(e,r,t){if(null!==e)for(var n,i,o,u=0,a=e.type,s="FeatureCollection"===a,l="Feature"===a,c=s?e.features.length:1,f=0;f<c;f++)for(var g,d,h=(d=!!(g=s?e.features[f].geometry:l?e.geometry:e)&&"GeometryCollection"===g.type)?g.geometries.length:1,m=0;m<h;m++){var y=0,p=0,v=d?g.geometries[m]:g;if(null!==v){var w=v.coordinates,b=v.type,P=!t||"Polygon"!==b&&"MultiPolygon"!==b?0:1;switch(b){case null:break;case"Point":if(!1===r(w,u,f,y,p))return!1;u++,y++;break;case"LineString":case"MultiPoint":for(n=0;n<w.length;n++){if(!1===r(w[n],u,f,y,p))return!1;u++,"MultiPoint"===b&&y++}"LineString"===b&&y++;break;case"Polygon":case"MultiLineString":for(n=0;n<w.length;n++){for(i=0;i<w[n].length-P;i++){if(!1===r(w[n][i],u,f,y,p))return!1;u++}"MultiLineString"===b&&y++,"Polygon"===b&&p++}"Polygon"===b&&y++;break;case"MultiPolygon":for(n=0;n<w.length;n++){for(i=p=0;i<w[n].length;i++){for(o=0;o<w[n][i].length-P;o++){if(!1===r(w[n][i][o],u,f,y,p))return!1;u++}p++}y++}break;case"GeometryCollection":for(n=0;n<v.geometries.length;n++)if(!1===M(v.geometries[n],r,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}function o(e,r){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length&&!1!==r(e.features[t].properties,t);t++);break;case"Feature":r(e.properties,0)}}function u(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length&&!1!==r(e.features[t],t);t++);}function n(e,r){for(var t,n,i,o,u,a,s,l,c,f=0,g="FeatureCollection"===e.type,d="Feature"===e.type,h=g?e.features.length:1,m=0;m<h;m++){for(u=g?e.features[m].geometry:d?e.geometry:e,s=g?e.features[m].properties:d?e.properties:{},l=g?e.features[m].bbox:d?e.bbox:void 0,c=g?e.features[m].id:d?e.id:void 0,o=(a=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,n=0;n<o;n++)if(null===(i=a?u.geometries[n]:u)){if(!1===r(null,f,s,l,c))return!1}else switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===r(i,f,s,l,c))return!1;break;case"GeometryCollection":for(t=0;t<i.geometries.length;t++)if(!1===r(i.geometries[t],f,s,l,c))return!1;break;default:throw new Error("Unknown Geometry Type")}f++}}function a(e,l){n(e,function(e,r,t,n,i){var o,u=null===e?null:e.type;switch(u){case null:case"Point":case"LineString":case"Polygon":return!1===l(h.feature(e,t,{bbox:n,id:i}),r,0)?!1:void 0}switch(u){case"MultiPoint":o="Point";break;case"MultiLineString":o="LineString";break;case"MultiPolygon":o="Polygon"}for(var a=0;a<e.coordinates.length;a++){var s=e.coordinates[a];if(!1===l(h.feature({type:o,coordinates:s},t),r,a))return!1}})}function i(e,d){a(e,function(o,u,a){var s=0;if(o.geometry){var l,c,f,g,e=o.geometry.type;if("Point"!==e&&"MultiPoint"!==e)return g=f=c=0,!1!==M(o,function(e,r,t,n,i){if(void 0===l||c<u||f<n||g<i)l=e,c=u,f=n,g=i,s=0;else{n=h.lineString([l,e],o.properties);if(!1===d(n,u,a,i,s))return!1;s++,l=e}})&&void 0}})}function s(e,u){if(!e)throw new Error("geojson is required");a(e,function(e,r,t){if(null!==e.geometry){var n=e.geometry.type,i=e.geometry.coordinates;switch(n){case"LineString":if(!1===u(e,r,t,0,0))return!1;break;case"Polygon":for(var o=0;o<i.length;o++)if(!1===u(h.lineString(i[o],e.properties),r,t,o))return!1}}})}t.coordAll=function(e){var r=[];return M(e,function(e){r.push(e)}),r},t.coordEach=M,t.coordReduce=function(e,o,u,r){var a=u;return M(e,function(e,r,t,n,i){a=0===r&&void 0===u?e:o(a,e,r,t,n,i)},r),a},t.featureEach=u,t.featureReduce=function(e,t,n){var i=n;return u(e,function(e,r){i=0===r&&void 0===n?e:t(i,e,r)}),i},t.findPoint=function(e,r){if(!h.isObject(r=r||{}))throw new Error("options is invalid");var t,n=r.featureIndex||0,i=r.multiFeatureIndex||0,o=r.geometryIndex||0,u=r.coordIndex||0,a=r.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),a=a||e.features[n].properties,t=e.features[n].geometry;break;case"Feature":a=a||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var s=t.coordinates;switch(t.type){case"Point":return h.point(s,a,r);case"MultiPoint":return i<0&&(i=s.length+i),h.point(s[i],a,r);case"LineString":return u<0&&(u=s.length+u),h.point(s[u],a,r);case"Polygon":return o<0&&(o=s.length+o),u<0&&(u=s[o].length+u),h.point(s[o][u],a,r);case"MultiLineString":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u),h.point(s[i][u],a,r);case"MultiPolygon":return i<0&&(i=s.length+i),o<0&&(o=s[i].length+o),u<0&&(u=s[i][o].length-u),h.point(s[i][o][u],a,r)}throw new Error("geojson is invalid")},t.findSegment=function(e,r){if(!h.isObject(r=r||{}))throw new Error("options is invalid");var t,n=r.featureIndex||0,i=r.multiFeatureIndex||0,o=r.geometryIndex||0,u=r.segmentIndex||0,a=r.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),a=a||e.features[n].properties,t=e.features[n].geometry;break;case"Feature":a=a||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var s=t.coordinates;switch(t.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=s.length+u-1),h.lineString([s[u],s[u+1]],a,r);case"Polygon":return o<0&&(o=s.length+o),u<0&&(u=s[o].length+u-1),h.lineString([s[o][u],s[o][u+1]],a,r);case"MultiLineString":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u-1),h.lineString([s[i][u],s[i][u+1]],a,r);case"MultiPolygon":return i<0&&(i=s.length+i),o<0&&(o=s[i].length+o),u<0&&(u=s[i][o].length-u-1),h.lineString([s[i][o][u],s[i][o][u+1]],a,r)}throw new Error("geojson is invalid")},t.flattenEach=a,t.flattenReduce=function(e,n,i){var o=i;return a(e,function(e,r,t){o=0===r&&0===t&&void 0===i?e:n(o,e,r,t)}),o},t.geomEach=n,t.geomReduce=function(e,o,u){var a=u;return n(e,function(e,r,t,n,i){a=0===r&&void 0===u?e:o(a,e,r,t,n,i)}),a},t.lineEach=s,t.lineReduce=function(e,i,o){var u=o;return s(e,function(e,r,t,n){u=0===r&&void 0===o?e:i(u,e,r,t,n)}),u},t.propEach=o,t.propReduce=function(e,t,n){var i=n;return o(e,function(e,r){i=0===r&&void 0===n?e:t(i,e,r)}),i},t.segmentEach=i,t.segmentReduce=function(e,o,u){var a=u,s=!1;return i(e,function(e,r,t,n,i){a=!1===s&&void 0===u?e:o(a,e,r,t,n,i),s=!0}),a}},{"@turf/helpers":1}],"@turf/area":[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=e("@turf/meta"),l=6378137;function i(e){var r=0;if(e&&0<e.length){r+=Math.abs(o(e[0]));for(var t=1;t<e.length;t++)r-=Math.abs(o(e[t]))}return r}function o(e){var r,t,n,i,o,u,a=0,s=e.length;if(2<s){for(u=0;u<s;u++)o=u===s-2?(n=s-2,i=s-1,0):u===s-1?(n=s-1,i=0,1):(i=(n=u)+1,u+2),r=e[n],t=e[i],a+=(c(e[o][0])-c(r[0]))*Math.sin(c(t[1]));a=a*l*l/2}return a}function c(e){return e*Math.PI/180}t.default=function(e){return n.geomReduce(e,function(e,r){return e+function(e){var r,t=0;switch(e.type){case"Polygon":return i(e.coordinates);case"MultiPolygon":for(r=0;r<e.coordinates.length;r++)t+=i(e.coordinates[r]);return t;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}(r)},0)}},{"@turf/meta":2}]},{},[])("@turf/area")});

// @turf/area 6.5.0
var turfArea = module.exports;
