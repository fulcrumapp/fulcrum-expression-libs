!function(e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).turftag=e()}(function(){return function o(n,i,f){function u(r,e){if(!i[r]){if(!n[r]){var t="function"==typeof require&&require;if(!e&&t)return t(r,!0);if(a)return a(r,!0);throw(e=new Error("Cannot find module '"+r+"'")).code="MODULE_NOT_FOUND",e}t=i[r]={exports:{}},n[r][0].call(t.exports,function(e){return u(n[r][1][e]||e)},t,t.exports,o,n,i,f)}return i[r].exports}for(var a="function"==typeof require&&require,e=0;e<f.length;e++)u(f[e]);return u}({1:[function(e,r,t){var a=e("turf-invariant");function p(e,r){for(var t=!1,o=0,n=r.length-1;o<r.length;n=o++){var i=r[o][0],f=r[o][1],u=r[n][0],a=r[n][1];f>e[1]!=a>e[1]&&e[0]<(u-i)*(e[1]-f)/(a-f)+i&&(t=!t)}return t}r.exports=function(e,r){var t=a.getCoord(e),o=r.geometry.coordinates;"Polygon"===r.geometry.type&&(o=[o]);for(var n=0,i=!1;n<o.length&&!i;n++)if(p(t,o[n][0])){for(var f=!1,u=1;u<o[n].length&&!f;)p(t,o[n][u])&&(f=!0),u++;f||(i=!0)}return i}},{"turf-invariant":2}],2:[function(e,r,t){r.exports.geojsonType=function(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)},r.exports.collectionOf=function(e,r,t){if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var o=0;o<e.features.length;o++){var n=e.features[o];if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!n.geometry||n.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+n.geometry.type)}},r.exports.featureOf=function(e,r,t){if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)},r.exports.getCoord=function(e){if(Array.isArray(e)&&"number"==typeof e[0]&&"number"==typeof e[1])return e;if(e){if("Feature"===e.type&&e.geometry&&"Point"===e.geometry.type&&Array.isArray(e.geometry.coordinates))return e.geometry.coordinates;if("Point"===e.type&&Array.isArray(e.coordinates))return e.coordinates}throw new Error("A coordinate, feature, or point geometry is required")}},{}],"turf-tag":[function(e,r,t){var i=e("turf-inside");r.exports=function(e,t,o,n){return e=JSON.parse(JSON.stringify(e)),t=JSON.parse(JSON.stringify(t)),e.features.forEach(function(r){r.properties||(r.properties={}),t.features.forEach(function(e){void 0===r.properties[n]&&i(r,e)&&(r.properties[n]=e.properties[o])})}),e}},{"turf-inside":1}]},{},[])("turf-tag")});

var turftag = module.exports;
